[
    {
        "id": "4f793d28442c2b27",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "03f4ed9ed3ba89fe",
        "type": "rpi-gpio in",
        "z": "4f793d28442c2b27",
        "name": "Water Metter Sensor",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": true,
        "bcm": true,
        "x": 110,
        "y": 420,
        "wires": [
            [
                "1cf2659616d7f1a0"
            ]
        ]
    },
    {
        "id": "259102e47f70f943",
        "type": "debug",
        "z": "4f793d28442c2b27",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 220,
        "wires": []
    },
    {
        "id": "e2b3497949f7ba39",
        "type": "mqtt out",
        "z": "4f793d28442c2b27",
        "name": "weather publisher",
        "topic": "weather",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e3c5637d1c2a2cc",
        "x": 1230,
        "y": 700,
        "wires": []
    },
    {
        "id": "ecbbf5a2e4656ee5",
        "type": "comment",
        "z": "4f793d28442c2b27",
        "name": "Water metter description",
        "info": "Reads the water metter sensor connected to GPIO and publish it to the MQTT broker.",
        "x": 130,
        "y": 380,
        "wires": []
    },
    {
        "id": "ee78e6059a139b24",
        "type": "rpi-gpio out",
        "z": "4f793d28442c2b27",
        "name": "Water Valve Relay",
        "pin": "17",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 910,
        "y": 140,
        "wires": []
    },
    {
        "id": "6f26d8e5978a0282",
        "type": "inject",
        "z": "4f793d28442c2b27",
        "name": "Open Solenoid Test",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 630,
        "y": 40,
        "wires": [
            [
                "ee78e6059a139b24"
            ]
        ]
    },
    {
        "id": "a0bbd7f25699eb71",
        "type": "comment",
        "z": "4f793d28442c2b27",
        "name": "Solenoid workflow",
        "info": "\n\n\n\n\n\n\nSimulates a open/close to the realy for water valve.",
        "x": 110,
        "y": 120,
        "wires": []
    },
    {
        "id": "7c718feb609ae53d",
        "type": "serial in",
        "z": "4f793d28442c2b27",
        "name": "Soil Moisture Sensor - virtual serial port",
        "serial": "911c1cbf0113d0ec",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "011aa4b3a5fbe966"
            ]
        ]
    },
    {
        "id": "fe04a7baefb6ea8b",
        "type": "udp in",
        "z": "4f793d28442c2b27",
        "name": "MCP3008 Transmission",
        "iface": "",
        "port": "12345",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 180,
        "y": 900,
        "wires": [
            [
                "b8e9081f7f0c0bc7"
            ]
        ]
    },
    {
        "id": "cccc9ac714548d6d",
        "type": "comment",
        "z": "4f793d28442c2b27",
        "name": "Virtual serial port - Sensor data test",
        "info": "Handles\nIncomming sensor data readings via open virtual serial port.\nNeeds the virtual serial port open with socat in the Raspberry Pi.\nGet the serial device open by socat utility.\nSerial device will be in the form of /dev/pts/n, where n is a number.\nSocat will use two pts ports to act as two end points. One will be used by the program and the other by Nodered.",
        "x": 160,
        "y": 260,
        "wires": []
    },
    {
        "id": "98edf2a81a71d15b",
        "type": "comment",
        "z": "4f793d28442c2b27",
        "name": "UDP server description",
        "info": "Handles\nIncomming sensor data readings via an open UDP socket.",
        "x": 120,
        "y": 860,
        "wires": []
    },
    {
        "id": "b488a252d01a7e4e",
        "type": "http in",
        "z": "4f793d28442c2b27",
        "name": "Electric Solenoid - API",
        "url": "/toggle",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "37d0dff5f05a54b8"
            ]
        ]
    },
    {
        "id": "37d0dff5f05a54b8",
        "type": "function",
        "z": "4f793d28442c2b27",
        "name": "toggle",
        "func": "if (msg.payload.solenoid=='open') {\n    msg.payload = 1\n    msg.statusCode = 200\n} else if (msg.payload.solenoid=='close') {\n    msg.payload = 0\n    msg.statusCode = 200\n} else {\n    msg.statusCode = 400\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 160,
        "wires": [
            [
                "72ea204fcde50429",
                "24950211da0ddd26",
                "6ba536a074a76c8e"
            ]
        ]
    },
    {
        "id": "72ea204fcde50429",
        "type": "http response",
        "z": "4f793d28442c2b27",
        "name": "API response",
        "statusCode": "",
        "headers": {},
        "x": 640,
        "y": 220,
        "wires": []
    },
    {
        "id": "24950211da0ddd26",
        "type": "trigger",
        "z": "4f793d28442c2b27",
        "name": "Open solenoid",
        "op1": "1",
        "op2": "0",
        "op1type": "num",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "0",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 640,
        "y": 140,
        "wires": [
            [
                "259102e47f70f943",
                "ee78e6059a139b24"
            ]
        ]
    },
    {
        "id": "6ba536a074a76c8e",
        "type": "trigger",
        "z": "4f793d28442c2b27",
        "name": "Close solenoid",
        "op1": "0",
        "op2": "0",
        "op1type": "num",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "1",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 640,
        "y": 180,
        "wires": [
            [
                "259102e47f70f943",
                "ee78e6059a139b24"
            ]
        ]
    },
    {
        "id": "470b54f2ce951049",
        "type": "comment",
        "z": "4f793d28442c2b27",
        "name": "Analog Sensor Group",
        "info": "",
        "x": 120,
        "y": 820,
        "wires": []
    },
    {
        "id": "e845c766571d488c",
        "type": "http request",
        "z": "4f793d28442c2b27",
        "name": "GET weather request",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=34.8586&longitude=-82.4476&current=temperature_2m,relative_humidity_2m,is_day,precipitation,rain,showers,snowfall,cloud_cover&hourly=temperature_2m&temperature_unit=fahrenheit&timezone=America%2FNew_York",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 460,
        "y": 700,
        "wires": [
            [
                "bb2e983a3fef94e7"
            ]
        ]
    },
    {
        "id": "d1b85314f0d01ba1",
        "type": "inject",
        "z": "4f793d28442c2b27",
        "name": "Get weather every 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": "150",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 700,
        "wires": [
            [
                "e845c766571d488c"
            ]
        ]
    },
    {
        "id": "bb2e983a3fef94e7",
        "type": "function",
        "z": "4f793d28442c2b27",
        "name": "WeatherMqttFormat",
        "func": "msg.payload = {\"subtopic\": \"weather\", \"data\": msg.payload.current}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 700,
        "wires": [
            [
                "e2b3497949f7ba39",
                "52ba04a506128cd2"
            ]
        ]
    },
    {
        "id": "011aa4b3a5fbe966",
        "type": "debug",
        "z": "4f793d28442c2b27",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 300,
        "wires": []
    },
    {
        "id": "1cf2659616d7f1a0",
        "type": "totaliser",
        "z": "4f793d28442c2b27",
        "output": "sum",
        "interval": "1",
        "intervalUnits": "seconds",
        "name": "ReadWaterFlow",
        "x": 320,
        "y": 420,
        "wires": [
            [
                "ec253d7072196ec9"
            ]
        ]
    },
    {
        "id": "ec253d7072196ec9",
        "type": "function",
        "z": "4f793d28442c2b27",
        "name": "WaterRateMqttFormat",
        "func": "msg.payload.total = (msg.payload.total * 60) / 5.5;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 420,
        "wires": [
            [
                "b52653a3c3b5ed3d"
            ]
        ]
    },
    {
        "id": "c7b6d7e6eec8f7e8",
        "type": "inject",
        "z": "4f793d28442c2b27",
        "name": "sunny test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"subtopic\":\"weather\", \"data\":{\"is_day\":1, \"rain\": 0, \"cloud_cover\": 0}}",
        "payloadType": "json",
        "x": 1020,
        "y": 560,
        "wires": [
            [
                "e2b3497949f7ba39"
            ]
        ]
    },
    {
        "id": "7249451485e68d08",
        "type": "inject",
        "z": "4f793d28442c2b27",
        "name": "clouddy test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"subtopic\":\"weather\", \"data\":{\"is_day\":1, \"rain\": 0, \"cloud_cover\": 11}}",
        "payloadType": "json",
        "x": 1030,
        "y": 600,
        "wires": [
            [
                "e2b3497949f7ba39"
            ]
        ]
    },
    {
        "id": "df11517afeb82c4a",
        "type": "inject",
        "z": "4f793d28442c2b27",
        "name": "rain test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"subtopic\":\"weather\", \"data\":{\"is_day\":0, \"rain\": 5, \"cloud_cover\": 100}}",
        "payloadType": "json",
        "x": 1010,
        "y": 520,
        "wires": [
            [
                "e2b3497949f7ba39"
            ]
        ]
    },
    {
        "id": "93c0b5b360a0fa25",
        "type": "mqtt out",
        "z": "4f793d28442c2b27",
        "name": "sensor publisher",
        "topic": "sensor",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e3c5637d1c2a2cc",
        "x": 640,
        "y": 900,
        "wires": []
    },
    {
        "id": "4eb6fe5789537a2b",
        "type": "mqtt out",
        "z": "4f793d28442c2b27",
        "name": "water publisher",
        "topic": "water",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e3c5637d1c2a2cc",
        "x": 1080,
        "y": 360,
        "wires": []
    },
    {
        "id": "d8a779a787bd3465",
        "type": "function",
        "z": "4f793d28442c2b27",
        "name": "SunlightMqttFormat",
        "func": "msg.payload = { \"subtopic\": \"sunlight\", \"data\": 12, \"time\": new Date(Date.now() - 1.44e+7)}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 640,
        "wires": [
            [
                "e2b3497949f7ba39",
                "52ba04a506128cd2"
            ]
        ]
    },
    {
        "id": "30d1b5d67b6c57f5",
        "type": "function",
        "z": "4f793d28442c2b27",
        "name": "HumidityMqttFormat",
        "func": "msg.payload = { \"subtopic\": \"humidity\", \"data\": msg.payload }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 580,
        "wires": [
            [
                "e2b3497949f7ba39",
                "52ba04a506128cd2"
            ]
        ]
    },
    {
        "id": "a9dd98ce10acaa56",
        "type": "comment",
        "z": "4f793d28442c2b27",
        "name": "Weather information",
        "info": "",
        "x": 110,
        "y": 520,
        "wires": []
    },
    {
        "id": "6afa200ea491754e",
        "type": "inject",
        "z": "4f793d28442c2b27",
        "name": "Close Solenoid Test",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 630,
        "y": 80,
        "wires": [
            [
                "ee78e6059a139b24"
            ]
        ]
    },
    {
        "id": "54489a902578eaf9",
        "type": "inject",
        "z": "4f793d28442c2b27",
        "name": "Water Rate Test",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \"total\":123}",
        "payloadType": "json",
        "x": 760,
        "y": 380,
        "wires": [
            [
                "d420485938757c32"
            ]
        ]
    },
    {
        "id": "90eddd2ccfe39906",
        "type": "inject",
        "z": "4f793d28442c2b27",
        "name": "Sensor Group Test",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"subtopic\": \"soilmonitor\", \"data\": {\"sensor1\":10, \"sensor2\":21, \"sensor3\":12, \"sensor4\":32 }}",
        "payloadType": "json",
        "x": 390,
        "y": 820,
        "wires": [
            [
                "93c0b5b360a0fa25"
            ]
        ]
    },
    {
        "id": "24498ec8f7d6912d",
        "type": "inject",
        "z": "4f793d28442c2b27",
        "name": "night test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"subtopic\":\"weather\", \"data\":{\"is_day\":0, \"rain\": 0, \"cloud_cover\": 100}}",
        "payloadType": "json",
        "x": 1020,
        "y": 640,
        "wires": [
            [
                "e2b3497949f7ba39"
            ]
        ]
    },
    {
        "id": "b8e9081f7f0c0bc7",
        "type": "function",
        "z": "4f793d28442c2b27",
        "name": "SensorMqttFormat",
        "func": "msg.payload = {\"subtopic\": \"weather\", \"data\": msg.payload.current}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 900,
        "wires": [
            [
                "93c0b5b360a0fa25"
            ]
        ]
    },
    {
        "id": "52ba04a506128cd2",
        "type": "debug",
        "z": "4f793d28442c2b27",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 760,
        "wires": []
    },
    {
        "id": "a11998c3d4b25d60",
        "type": "i2c scan",
        "z": "4f793d28442c2b27",
        "name": "BME280",
        "busno": "2",
        "x": 540,
        "y": 580,
        "wires": [
            [
                "30d1b5d67b6c57f5"
            ],
            []
        ]
    },
    {
        "id": "5c794e21d8dea803",
        "type": "inject",
        "z": "4f793d28442c2b27",
        "name": "Get temperature, humidity, pressure every 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": "150",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 580,
        "wires": [
            [
                "a11998c3d4b25d60"
            ]
        ]
    },
    {
        "id": "b715d802081cedde",
        "type": "i2c scan",
        "z": "4f793d28442c2b27",
        "name": "Sunlight",
        "busno": "1",
        "x": 440,
        "y": 640,
        "wires": [
            [
                "d8a779a787bd3465"
            ],
            []
        ]
    },
    {
        "id": "52399cb8c7bfa448",
        "type": "inject",
        "z": "4f793d28442c2b27",
        "name": "Get sunlight every 5 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": "150",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "b715d802081cedde"
            ]
        ]
    },
    {
        "id": "b52653a3c3b5ed3d",
        "type": "totaliser",
        "z": "4f793d28442c2b27",
        "output": "sum",
        "interval": "1",
        "intervalUnits": "hours",
        "name": "Litters/Hour",
        "x": 750,
        "y": 420,
        "wires": [
            [
                "d420485938757c32"
            ]
        ]
    },
    {
        "id": "d420485938757c32",
        "type": "switch",
        "z": "4f793d28442c2b27",
        "name": "",
        "property": "payload.total",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 420,
        "wires": [
            [
                "4eb6fe5789537a2b",
                "54e63e5e7e1cc6fe"
            ]
        ]
    },
    {
        "id": "985e043430ad67a6",
        "type": "MySQL-Connector",
        "z": "4f793d28442c2b27",
        "server": "7c13836bbe36c4da",
        "name": "smartgarden DB",
        "x": 1240,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "54e63e5e7e1cc6fe",
        "type": "function",
        "z": "4f793d28442c2b27",
        "name": "INSERT",
        "func": "msg.payload.time = new Date(Date.now());\nmsg.topic = \"INSERT INTO water_meter (`time`, `rate`) VALUES (:time, :total);\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 460,
        "wires": [
            [
                "985e043430ad67a6"
            ]
        ]
    },
    {
        "id": "7e3c5637d1c2a2cc",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "911c1cbf0113d0ec",
        "type": "serial-port",
        "name": "sensor read",
        "serialport": "/dev/pts/10",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "7c13836bbe36c4da",
        "type": "MySQL-Server-Connector",
        "name": "mariadb",
        "host": "127.0.0.1",
        "port": "3306",
        "user": "root",
        "password": "111111",
        "tls": false,
        "database": "smartgarden"
    }
]